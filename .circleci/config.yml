version: 2
jobs:
  build:
    working_directory: ~/app
    docker:
    - image: circleci/node:10

    steps:
    - checkout

    - run:
        name: Install yarn
        command: 'sudo npm install -g yarn@latest'

    - restore_cache:
        key: dependency-cache-{{ checksum "yarn.lock" }}

    - run:
        name: Add .npmrc with Nexus registry credentials
        command: |
          AUTH_TOKEN=${NPM_TOKEN}
          touch .npmrc
          echo "@tg:registry=https://nexus.tgpost.me/repository/npm-private/" >> .npmrc
          echo "@scc:registry=https://nexus.tgpost.me/repository/npm-private/" >> .npmrc
          echo "//nexus.tgpost.me/repository/npm-private/:_authToken=NpmToken.${NPM_TOKEN}" >> .npmrc

    - run:
        name: Install packages
        command: yarn install

    - save_cache:
        key: dependency-cache-{{ checksum "yarn.lock" }}
        paths:
        - node_modules

    - run:
        name: Build
        command: |
          yarn prd:build-client
          # yarn prd:build-server
          mkdir -p artifacts
          cp -R bundle_client ./artifacts

    - persist_to_workspace:
        root: artifacts
        paths:
        - bundle_client

  deploy_to_test:
    working_directory: ~/app
    docker:
    - image: circleci/python:3.7
    environment:
      DO_SPACES_CDN_STATIC_BUCKET: 'public'
      DO_SPACES_CDN_APP_DIRECTORY: 'poster'
      DO_SPACES_CDN_LOCAL_DIRECTORY: './build_client'
      DO_SPACES_CDN_REGION: 'fra1'
    steps:
    - checkout

    - attach_workspace:
        at: ~/app

    - run:
       name: Download script to upload artifact to DO Spaces
       command: curl -o ~/app/upload.py https://cdn.tgpost.me/scripts/upload-to-spaces.py

    - run:
        name: Install boto3
        command: pip install boto3

    - run:
        name: Upload artifacts to CDN
        command: 'python upload.py'

workflows:
  version: 2
  pipeline:
    jobs:

    - build:
        context: global
        filters:
          branches:
            only:
            - master

    - deploy_to_test:
        requires:
        - build
        context: global
        filters:
          branches:
            only:
            - master
