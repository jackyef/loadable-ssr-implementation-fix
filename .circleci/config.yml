version: 2
jobs:
#  build:
#    docker:
#    - image: circleci/node:10
#
#    working_directory: ~/repo
#
#    steps:
#    - add_ssh_keys:
#        fingerprints:
#          - "7b:4a:bb:da:31:5b:69:de:e3:5e:2b:b8:79:54:e2:7a"
#          - "04:37:ac:6c:48:11:b8:7c:33:c5:1f:14:77:87:89:cf"
#
#    - checkout
#
#    # Download and cache dependencies
#    - restore_cache:
#        keys:
#        - v1-dependencies-{{ checksum "package.json" }}
#        # fallback to using the latest cache if no exact match is found
#        - v1-dependencies-
#
#    - run: yarn install
#
#    - save_cache:
#        paths:
#        - node_modules
#        key: v1-dependencies-{{ checksum "package.json" }}
#
#    - run:
#        name: Clone inner dependencies
#        command: |
#          git clone git@bitbucket.org:sccockpit/ui-kit.git
#          git clone git@bitbucket.org:souldevsteam/tg-ui.git
#          mkdir -p ./node_modules/@scc
#          mv ./ui-kit ./node_modules/@scc/ui-kit
#          mkdir -p ./node_modules/@tg
#          mv ./tg-ui ./node_modules/@tg/ui
#
#    - run:
#        name: Build
#        command: |
#          yarn prd:build-client
#          yarn prd:build-server
#          mkdir -p artifacts
#          cp -R bundle_client ./artifacts
#
#    - persist_to_workspace:
#        root: artifacts
#        paths:
#        - bundle_client

  deploy_to_test:
    docker:
    - image: google/cloud-sdk
    environment:
    - PROJECT_NAME: "tg-ui-public"
    - GOOGLE_PROJECT_ID: "platformgram"
    - GOOGLE_COMPUTE_ZONE: "europe-north1-a"
    - GOOGLE_CLUSTER_NAME: "tg-cluster"
    steps:
    - checkout

    - run:
        name: Setup Google Cloud SDK
        command: |
          apt-get install -qq -y gettext
          echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
          gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
          gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
          gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
          gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}

    - setup_remote_docker

    - run:
        name: Docker build and push
        command: |
          docker build \
            --build-arg COMMIT_REF=${CIRCLE_SHA1} \
            --build-arg BUILD_DATE=`date -u +”%Y-%m-%dT%H:%M:%SZ”` \
            -t ${PROJECT_NAME} .
          docker tag ${PROJECT_NAME} eu.gcr.io/${GOOGLE_PROJECT_ID}/${PROJECT_NAME}:${CIRCLE_SHA1}
          gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://eu.gcr.io
          docker push eu.gcr.io/${GOOGLE_PROJECT_ID}/${PROJECT_NAME}:${CIRCLE_SHA1}

    - run:
        name: Deploy to Kubernetes
        no_output_timeout: 2m
        command: |
          envsubst < ${HOME}/project/k8s.yml > ${HOME}/patched_k8s.yml
          kubectl apply -f ${HOME}/patched_k8s.yml
          kubectl rollout status deployment/${PROJECT_NAME}

workflows:
  version: 2
  pipeline:
    jobs:

#    - build:
#        filters:
#          branches:
#            only:
#            - master

    - deploy_to_test:
#        requires:
#        - build
        filters:
          branches:
            only:
            - master
